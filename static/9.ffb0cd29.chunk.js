webpackJsonp([9],{1192:function(n,e,o){var t=o(0),l=o(65),i=o(15).PageRenderer;i.__esModule&&(i=i.default);var a=l({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(1217)}},componentWillMount:function(){},render:function(){return t.createElement(i,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,n.exports=a},1217:function(n,e){n.exports='## SearchInput\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: onBlur\n    Type: function\n    Default: null\n    Notes: Handler function\n  - Prop: onFocus\n    Type: function\n    Default: null\n    Notes: Handler function\n  - Prop: slim\n    Type: boolean\n    Default: "false"\n    Notes: Size design variant\n  - Prop: invert\n    Type: boolean\n    Default: N/A\n    Notes: Color design variant\n  - Prop: className\n    Type: string\n    Default: null\n    Notes: Enables passing a className to the Container\n  - Prop: iconProps\n    Type: object\n    Default: null\n    Notes: Enables passing props to the SearchIcon\n```\n\n```react\nresponsive: true\nspan: 6\n---\n<Header>\n    <Column medium={10} large={7} style={{ paddingBottom: "16px" }}>\n        <Search placeholder="Enter term..." iconProps={{ color: "currentColor" }} />\n    </Column>\n</Header>\n```\n\n```react\nresponsive: true\nspan: 6\n---\n<Container>\n    <Row>\n        <Column medium={10} large={7} style={{ padding: "16px 0" }}>\n            <Search invert placeholder="Enter term..." />\n        </Column>\n    </Row>\n</Container>\n```\n\n## Search Slim\n\n```react\nresponsive: true\nspan: 6\n---\n<Header>\n    <Column medium={10} large={7} style={{ paddingBottom: "16px" }}>\n        <Search slim placeholder="Enter term..." />\n    </Column>\n</Header>\n```\n\n```react\nresponsive: true\nspan: 6\n---\n<Container>\n    <Row>\n        <Column medium={10} large={7} style={{ padding: "16px 0" }}>\n            <Search invert slim placeholder="Enter term..." />\n        </Column>\n    </Row>\n</Container>\n```\n\n## Radio Group Button\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: array of strings\n    Default: N/A\n    Notes: Can only be one value within the array\n  - Prop: onChange\n    Type: Function\n    Default: N/A\n    Notes:\n```\n\n## Radio Button\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: size\n    Type: string\n    Default: small\n    Notes: Can be small or large\n  - Prop: name\n    Type: string\n    Default: N/A\n    Notes: Is Required\n  - Prop: isActive\n    Type: boolean\n    Default: "true"\n    Notes: Will disable radio input\n  - Prop: "value"\n    Type: string\n    Default: N/A\n    Notes: Is required\n  - Prop: index\n    Type: number\n    Default: N/A\n    Notes: Is required for keyboard accessibility\n  - Prop: isTopAligned\n    Type: boolean\n    Default: "false"\n    Notes: Align layout to the top to handle custom component passed to the label\n```\n\n```react\nspan: 6\n---\n<Container>\n    <Row>\n        <Column medium={6} style={{ padding: "16px 0" }}>\n          <RadioGroup aria-label="test large radio">\n                <RadioButton size="large" name="example1" value="FirstButton" index={0} isTopAligned>\n                    Testing One\n                    <p style={{ fontSize: "12px", margin: "3px 0 0 0", color: "rgba(38, 38, 38, 0.65" }}>Testing One description</p>\n                </RadioButton>\n                <RadioButton size="large" name="example1" value="SecondButton" index={1}>\n                    Testing Two\n                </RadioButton>\n                <RadioButton size="large" name="example1" value="ThirdButton" index={2}>\n                    Testing Three\n                </RadioButton>\n          </RadioGroup>\n        </Column>\n        <Column medium={6} style={{ padding: "16px 0" }}>\n          <RadioGroup aria-label="test small radio">\n                <RadioButton size="small" name="example2" value="1" index={0}>\n                    Testing One\n                </RadioButton>\n\n                <RadioButton size="small" name="example2" value="2" index={1} isTopAligned>\n                    Testing Two\n                    <p style={{ fontSize: "12px", margin: "3px 0 0 0", color: "rgba(38, 38, 38, 0.65" }}>Testing Two description</p>\n                </RadioButton>\n\n                <RadioButton size="small" name="example2" value="3" index={2}>\n                    Testing Three\n                </RadioButton>\n          </RadioGroup>\n        </Column>\n    </Row>\n</Container>\n```\n\n## Check Box Group\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: array of strings\n    Default: N/A\n    Notes: Can be many values within the array\n  - Prop: onChange\n    Type: Function\n    Default: N/A\n    Notes:\n  - Prop: isTopAligned\n    Type: boolean\n    Default: "false"\n    Notes: Align layout to the top to handle custom component passed to the label\n```\n\n```react\nspan: 6\n---\n<ThemeProvider theme={{ themeName: \'tm\' }}>\n    <Container>\n        <Row>\n            <Column medium={6}  style={{ padding: "16px 0" }}>\n                <CheckBoxGroup value={["1","2","3"]}>\n                    <CheckBoxButton isTopAligned size="large" name="Testing One"  value="1" index={0} style={{ marginBottom: \'10px\' }}>\n                        Testing One\n                        <p style={{ fontSize: "12px", margin: "3px 0 0 0", color: "rgba(38, 38, 38, 0.65" }}>Testing One description</p>\n                    </CheckBoxButton>\n                    <CheckBoxButton size="large" name="Testing Two" value="2" index={1} style={{ marginBottom: \'10px\' }}>\n                        Testing Two\n                    </CheckBoxButton>\n                    <CheckBoxButton size="large" name="Testing Three" value="3" index={2}>\n                        Testing Three\n                    </CheckBoxButton>\n                </CheckBoxGroup>\n            </Column>\n            <Column medium={6} style={{ padding: "16px 0" }}>\n                <CheckBoxGroup >\n                    <CheckBoxButton isTopAligned size="small" name="Testing One"  value="1" index={0} style={{ marginBottom: \'10px\' }}>\n                        Testing One\n                        <p style={{ fontSize: "12px", margin: "3px 0 0 0", color: "rgba(38, 38, 38, 0.65" }}>Testing One description</p>\n                    </CheckBoxButton>\n                    <CheckBoxButton size="small" name="Testing Two" value="2" index={1} style={{ marginBottom: \'10px\' }}>\n                        Testing Two\n                    </CheckBoxButton>\n                    <CheckBoxButton size="small" name="Testing Three" value="3" index={2}>\n                        Testing Three\n                    </CheckBoxButton>\n                </CheckBoxGroup>\n            </Column>\n        </Row>\n    </Container>\n</ThemeProvider>\n```\n\n## Check Box Button\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: size\n    Type: string\n    Default: small\n    Notes: Can be small or large\n  - Prop: name\n    Type: string\n    Default: N/A\n    Notes: Is Required\n  - Prop: value\n    Type: string\n    Default: N/A\n    Notes: Is Required\n  - Prop: disabled\n    Type: boolean\n    Default: \'false\'\n    Notes: Will disable checkbox input\n  - Prop: index\n    Type: number\n    Default: N/A\n    Notes: Is required for keyboard accessibility (only when used with CheckBoxGroup)\n  - Prop: onClick\n    Type: function\n    Default: N/A\n    Notes: click handler (required when used without CheckBoxGroup)\n  - Prop: isChecked\n    Type: boolean or "indeterminate"\n    Default: N/A\n    Notes: defines if checked or indeterminate (required when used without CheckBoxGroup)\n```\n\n```react\nspan: 6\n---\n<ThemeProvider theme={{ themeName: \'tm\' }}>\n    <Container>\n        <Row>\n            <Column medium={6}  style={{ padding: "16px 0" }}>\n                <CheckboxWrapperExample size="small"/>\n            </Column>\n            <Column medium={6}  style={{ padding: "16px 0" }}>\n                <CheckboxWrapperExample size="large"/>\n            </Column>\n        </Row>\n    </Container>\n</ThemeProvider>\n```\n\n## Field Input\n\n```table\nspan: 6\nrows:\n  - Prop: labelPosition\n    Type: string\n    Default: top\n    Notes: Can be top or left\n  - Prop: placeholder\n    Type: string\n    Default: N/A\n    Notes: Is not required\n  - Prop: name\n    Type: string\n    Default: "null"\n    Notes: Optional input name.\n  - Prop: id\n    Type: string\n    Default: N/A\n    Notes: Optional input id.\n  - Prop: label\n    Type: string\n    Default: N/A\n    Notes: Optional input label. If not passed label container will not be rendered\n  - Prop: labelStyle\n    Type: object\n    Default: N/A\n    Notes: Optional. Allows editing label style.\n  - Prop: errorMessage\n    Type: string\n    Default: N/A\n    Notes: Will present a different style when a prop is supplied\n  - Prop: errorFieldProps\n    Type: object\n    Default: N/A\n    Notes: Extra props passed to the error field\n  - Prop: disabled\n    Type: boolean\n    Default: "false"\n    Notes: Will disable text input\n  - Prop: size\n    Type: string\n    Default: regular\n    Notes: Defines the size of an input field. Can be small, regular or large\n  - Prop: tag\n    Type: enum("input", "textarea")\n    Default: N/A\n    Notes: Changes the underlying HTML Element.\n```\n\n```react\nspan: 6\n---\n<Container>\n    <ThemeProvider theme={{ themeName: \'tm\' }}>\n        <Row>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" id="testID"  style={{ color: \'blue\' }} placeholder="Hint Text" name="test1" label="First Name" size="small"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" placeholder="Hint Text" name="test2" label="First Name"  errorMessage="Something Went Wrong" size="small"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" hintText="Hint Text" disabled={true} name="test3" label="First Name" size="small"/>\n                </Spacing>\n            </Column>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" placeholder="Hint Text" name="test4" label="First Name"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" placeholder="Hint Text" name="test5" label="First Name"  errorMessage="Something Went Wrong"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" hintText="Hint Text" disabled={true} name="test6" label="First Name"/>\n                </Spacing>\n            </Column>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" placeholder="Hint Text" name="test7" label="First Name" size="large"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" placeholder="Hint Text" name="test8" label="First Name"  errorMessage="Something Went Wrong" size="large"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="top" hintText="Hint Text" disabled={true} name="test9" label="First Name" size="large"/>\n                </Spacing>\n            </Column>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input tag="textarea" labelPosition="top" placeholder="Hint Text" name="test111" label="Textarea" size="large"/>\n                </Spacing>\n            </Column>\n        </Row>\n    </ThemeProvider>\n</Container>\n```\n\n```react\nspan: 6\n---\n<Container>\n    <ThemeProvider theme={{ themeName: \'tm\' }}>\n        <Row>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" placeholder="Hint Text" name="test10" label="First Name" size="small"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" placeholder="Hint Text" name="test11" label="First Name"  errorMessage="Something Went Wrong" size="small"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" hintText="Hint Text" disabled={true} name="test12" label="First Name" size="small"/>\n                </Spacing>\n            </Column>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" placeholder="Hint Text" name="test13" label="First Name"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" placeholder="Hint Text" name="test14" label="First Name"  errorMessage="Something Went Wrong"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" hintText="Hint Text" disabled={true} name="test15" label="First Name"/>\n                </Spacing>\n            </Column>\n            <Column medium={4}>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" placeholder="Hint Text" name="test16" label="First Name" size="large"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" placeholder="Hint Text" name="test17" label="First Name"  errorMessage="Something Went Wrong" size="large"/>\n                </Spacing>\n                <Spacing top={{small: "cozy"}}>\n                    <Input labelPosition="left" hintText="Hint Text" disabled={true} name="test18" label="First Name" size="large"/>\n                </Spacing>\n            </Column>\n        </Row>\n    </ThemeProvider>\n</Container>\n```\n\n## Drop Down Group\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: onChange\n    Type: function\n    Default: "null"\n    Notes: Invoked with an array of updatedSelections when one or more option(s) is selected by the user\n  - Prop: variant\n    Type:\n      enum(\n        DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL,\n        DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL,\n      )\n    Default: DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL\n    Notes: Specifies a layout variant of the DropDownGroup\n  - Prop: value\n    Type: array\n    Default: []\n    Notes: Specifies array of initial string values\n  - Prop: valueOverride\n    Type: array\n    Default: "null"\n    Notes: Specifies array of string values that override internal state\n  - Prop: label\n    Type: string\n    Default: ""\n    Notes: Visible with selected option.\n  - Prop: placeholder\n    Type: string\n    Default: ""\n    Notes: Visible instead of selected option. Overrides label. Supported in both variants.\n  - Prop: hiddenLabel\n    Type: boolean\n    Default: "false"\n    Notes: To avail proper screen reader\'s reading when placeholder and label can not be displayed in view. Can be used only with label.\n  - Prop: isOpen\n    Type: boolean\n    Default: "false"\n    Notes: Used to override internal isOpen state\n  - Prop: keywordSearch\n    Type: boolean\n    Default: \'true\'\n    Notes: Used to override ability to use keyboard to focus on drop down option\n  - Prop: withKeyboardProvider\n    Type: boolean\n    Default: \'true\'\n    Notes: Used to override inclusion of a KeyboardProvider to handle keydown events\n  - Prop: shouldOpenDownward\n    Type: boolean\n    Default: \'true\'\n    Notes: Used to ensure that the DropDownGroup always opens downward\n  - Prop: size\n    Type: small or large\n    Default: "large"\n    Notes: Defines size\n  - Prop: fullWidth\n    Type: boolean\n    Default: \'false\'\n    Notes: Defines if width is 100% of container\n  - Prop: onDropDownToggle\n    Type: function\n    Default: \'null\'\n    Notes: Callback invoked when dropdown open/hide event fired\n  - Prop: dropdownMenuOpen\n    Type: function\n    Default: \'null\'\n    Notes: Callback invoked when dropdown open event fired\n  - Prop: dropdownMenuClose\n    Type: function\n    Default: \'null\'\n    Notes: Callback invoked when dropdown close event fired\n  - Prop: hybrid\n    Type: boolean\n    Default: \'false\'\n    Notes: Set this to true while implementing hybrid select\n  - Prop: hideDropdown\n    Type: boolean\n    Default: \'true\'\n    Notes: Use this to toggle dropdown\'s visiblity when `hybrid={true}`\n```\n\n## Drop Down Option\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: string\n    Default: N/A\n    Notes: Required\n  - Prop: index\n    Type: number\n    Default: N/A\n    Notes: Required\n  - Prop: className\n    Type: string\n    Default: ""\n    Notes: Passed to StyledDropDownItem\n  - Prop: onClick\n    Type: function\n    Default: "null"\n    Notes: Invoked with the synthetic event object when the DropDownOption is clicked\n  - Prop: chevronVisible\n    Type: bool\n    Default: true\n    Notes: Indicates whether show or hide right chevron icon\n  - Prop: preventCloseWithKeys\n    Type: bool\n    Default: "false"\n    Notes: It prevents dropdown menu from closing when option is selected with Enter or Space key.\n  - Prop: icon\n    Type: node\n    Default: null\n    Notes: Inserts an icon before label text\n  - Prop: ...props\n    Type: any\n    Default:\n    Notes: Passes through any other props to underlying DropDownInput\n```\n\n```react\nspan: 6\n---\n<ThemeProvider theme={{ themeName: \'tm\' }}>\n    <Container>\n        <Row>\n            <Column medium={3}>\n                <DropDownGroup\n                  size="small"\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  placeholder="Select an option"\n                  label="Selected:"\n                >\n                    <DropDownOption value="0" index={0}>Option One One One One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                    <DropDownOption value="5" index={5}>Option Six</DropDownOption>\n                    <DropDownOption value="6" index={6}>Option Two</DropDownOption>\n                    <DropDownOption value="7" index={7}>Option Three</DropDownOption>\n                    <DropDownOption value="8" index={8}>Option Four</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={3}>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  value={["3"]}\n                  placeholder="Select an option"\n                  shouldOpenDownward={false}\n                >\n                    <DropDownOption value="0" index={0}>Option One One One One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                    <DropDownOption value="5" index={5}>Option One One One One</DropDownOption>\n                    <DropDownOption value="6" index={6}>Option Two</DropDownOption>\n                    <DropDownOption value="7" index={7}>Option Three</DropDownOption>\n                    <DropDownOption value="8" index={8}>Option Four</DropDownOption>\n                    <DropDownOption value="9" index={9}>Option Five</DropDownOption>\n                    <DropDownOption value="10" index={10}>Option One One One One</DropDownOption>\n                    <DropDownOption value="11" index={11}>Option Two</DropDownOption>\n                    <DropDownOption value="12" index={12}>Option Three</DropDownOption>\n                    <DropDownOption value="13" index={13}>Option Four</DropDownOption>\n                    <DropDownOption value="14" index={14}>Option Five</DropDownOption>\n                    <DropDownOption value="15" index={15}>Option Five</DropDownOption>\n                    <DropDownOption value="16" index={16}>Option Two</DropDownOption>\n                    <DropDownOption value="17" index={17}>Option Three</DropDownOption>\n                    <DropDownOption value="18" index={18}>Option Four</DropDownOption>\n                    <DropDownOption value="19" index={19}>Option Five</DropDownOption>\n                    <DropDownOption value="20" index={20}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={3}>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  placeholder="Select an option"\n                  disabled\n                >\n                    <DropDownOption value="0" index={0}>Option One One One One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={3}>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  placeholder="Chevron hidden"\n                  chevronVisible={false}\n                >\n                    <DropDownOption value="0" index={0}>Option One One One One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n        </Row>\n        <Spacing top={{small: "normal"}} />\n        <Row >\n            <Column medium={3}>\n                <DropDownGroup\n                  size="small"\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\n                  placeholder="Select an option"\n                >\n                    <DropDownOption value="0" index={0}>Option One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" preventCloseWithKeys={true} index={2}>Don\'t close on Enter</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={3}>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\n                  label="Sort By:"\n                  placeholder="Select an option"\n                >\n                    <DropDownOption value="0" index={0}>Option One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={3}>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERLESS_INNER_LABEL}\n                  label="Sort By:"\n                  placeholder="Select an option"\n                  disabled\n                >\n                    <DropDownOption value="0" index={0}>Option One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={3}>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  value={["all"]}\n                  placeholder="date range"\n                  icon={<CalendarIcon />}\n                >\n                    <DropDownOption value="all" index={0}>All dates</DropDownOption>\n                    <DropDownOption value="this-weekend" index={1}>This weekends</DropDownOption>\n                    <DropDownOption value="custom" index={2}>Date range</DropDownOption>\n                </DropDownGroup>\n            </Column>\n        </Row>\n    </Container>\n</ThemeProvider>\n```\n\n## Drop Down Label\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: size\n    Type: small or large\n    Default: "large"\n    Notes: Defines size\n  - Prop: disabled\n    Type: bool\n    Default: false\n    Notes: defines if toggle is disabled\n  - Prop: ...props\n    Type: any\n    Default:\n    Notes: Passes through any other props to underlying label element\n```\n\n```react\nspan: 6\n---\n<ThemeProvider theme={{ themeName: \'tm\' }}>\n    <Container>\n        <Row >\n            <Column medium={4}>\n                <DropDownLabel id="labeltext" size="small">Label text</DropDownLabel>\n                <DropDownGroup\n                  size="small"\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  placeholder="Select an option"\n                  aria-describedby="labeltext"\n                >\n                    <DropDownOption value="0" index={0}>Option One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={4}>\n                <DropDownLabel id="fullwidthlabel">Full Width Drop Down</DropDownLabel>\n                <DropDownGroup\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  placeholder="Select an option"\n                  aria-describedby="fullwidthlabel"\n                  fullWidth\n                >\n                    <DropDownOption value="0" index={0}>Option One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n            <Column medium={4}>\n                <DropDownLabel disabled>Label text</DropDownLabel>\n                <DropDownGroup\n                  value={["0"]}\n                  variant={DropDownGroup.LAYOUT_VARIANTS.BORDERED_INNER_LABEL}\n                  placeholder="Select an option"\n                  disabled\n                >\n                    <DropDownOption value="0" index={0}>Option One</DropDownOption>\n                    <DropDownOption value="1" index={1}>Option Two</DropDownOption>\n                    <DropDownOption value="2" index={2}>Option Three</DropDownOption>\n                    <DropDownOption value="3" index={3}>Option Four</DropDownOption>\n                    <DropDownOption value="4" index={4}>Option Five</DropDownOption>\n                </DropDownGroup>\n            </Column>\n        </Row>\n    </Container>\n</ThemeProvider>\n```\n\n## Select\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: variant\n    Type: BORDERED_INNER_LABEL(value = 0) or BORDERLESS_INNER_LABEL(value = 1)\n    Default: BORDERED_INNER_LABEL\n    Notes: Specifies a layout variant of the select element\n  - Prop: size\n    Type: small or large\n    Default: "large"\n    Notes: Defines size of select element\n  - Prop: disabled\n    Type: boolean\n    Default: \'false\'\n    Notes: Defines if selection is disabled\n  - Prop: chevronVisible\n    Type: bool\n    Default: \'true\'\n    Notes: Indicates whether to show or hide right chevron icon\n  - Prop: fullWidth\n    Type: boolean\n    Default: \'false\'\n    Notes: To set width to be 100% of container\'s width\n  - Prop: hybrid\n    Type: boolean\n    Default: \'false\'\n    Notes: Set this to true while implementing hybrid select\n  - Prop: showSelect\n    Type: boolean\n    Default: \'true\'\n    Notes: Use this to toggle select\'s visiblity when `hybrid={true}`\n  - Prop: selectRef\n    Type: ref\n    Default: \'null\'\n    Notes: To access select\'s ref\n  - Prop: className\n    Type: string\n    Default: ""\n    Notes: Passed to StyledSelect\n  - Prop: ...props\n    Type: any\n    Default:\n    Notes: Passes through any other props to underlying select element\n```\n\n## Option\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: string\n    Notes: Required\n  - Prop: optionText\n    Type: string\n    Notes: To show alternate text ignoring label and children\n  - Prop: label\n    Type: string\n    Notes: To show alternate text ignoring children\n  - Prop: ...props\n    Type: any\n    Notes: Passes through any other props to underlying option element\n```\n\n```react\nspan: 6\n---\n<ThemeProvider theme={{ themeName: \'tm\' }}>\n    <Container>\n        <Row >\n            <Column medium={4}>\n              <DropDownLabel htmlFor="smallSelect" size="small">Small Select</DropDownLabel>\n              <Select\n                id="smallSelect"\n                size="small"\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="smallBorderless" size="small">Borderless Select</DropDownLabel>\n              <Select\n                id="smallBorderless"\n                size="small"\n                variant={1}\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="smallChevron" size="small">Chevron Hidden</DropDownLabel>\n              <Select\n                id="smallChevron"\n                size="small"\n                chevronVisible={false}\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n        </Row>\n        <Spacing top={{small: "normal"}} />\n        <Row >\n            <Column medium={4}>\n              <DropDownLabel htmlFor="largeSelect" size="large">Large Select</DropDownLabel>\n              <Select\n                id="largeSelect"\n                size="large"\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="largeBorderless" size="large">Borderless Select</DropDownLabel>\n              <Select\n                id="largeBorderless"\n                size="large"\n                variant={1}\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="largeChevron" size="large">Chevron Hidden</DropDownLabel>\n              <Select\n                id="largeChevron"\n                size="large"\n                chevronVisible={false}\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n        </Row>\n        <Spacing top={{small: "normal"}} />\n        <Row >\n            <Column medium={4}>\n              <DropDownLabel htmlFor="defaultSelect" size="large">Default Select</DropDownLabel>\n              <Select\n                id="defaultSelect"\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="disabledSelect" size="large" disabled>Disabled Select</DropDownLabel>\n              <Select\n                id="disabledSelect"\n                size="large"\n                disabled={true}\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="fullWidthSelect" size="large">Large Full Width Select</DropDownLabel>\n              <Select\n                id="fullWidthSelect"\n                size="large"\n                fullWidth={true}\n                aria-label="Select an option"\n              >\n                <Option value="" aria-label="">Select an option </Option>\n                <Option value="0">Option One</Option>\n                <Option value="1">Option Two</Option>\n                <Option value="2">Option Three</Option>\n                <Option value="3">Option Four</Option>\n                <Option value="4">Option Five</Option>\n              </Select>\n            </Column>\n        </Row>\n    </Container>\n</ThemeProvider>\n```\n\n## Hybrid Select\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: array\n    Default: "[ ]"\n    Notes: Specifies array of initial string values\n  - Prop: onChange\n    Type: function\n    Default: null\n    Notes: Invoked with an array of updatedSelection and eventFrom ["select" or "dropdown"] when an option is selected by the user\n  - Prop: placeholder\n    Type: string\n    Default: ""\n    Notes: Shows placeholder in dropdown and adds a blank option in native select\n  - Prop: showOptionPlaceholder\n    Type: boolean\n    Default: "`true`"\n    Notes: Set this to false in order to hide blank option from native select\n  - Prop: optionPlaceholderProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed to the blank option in native select\n  - Prop: hybridWrapperProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed to the wrapper of dropdown and select\n  - Prop: selectProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed only to the select\n  - Prop: dropdownProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed only to the dropdown\n```\n\n## Hybrid Option\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: string\n    Default: N/A\n    Notes: Required\n  - Prop: optionText\n    Type: string\n    Default: ""\n    Notes: When passed this text will be used in option and children will be ignored\n  - Prop: optionProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed only to the options of select\n  - Prop: dropdownOptionProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed only to the options of dropdown\n```\n\n```react\nspan: 6\n---\n<ThemeProvider theme={{ themeName: \'tm\' }}>\n    <Container>\n        <Row >\n            <Column medium={4}>\n              <DropDownLabel htmlFor="demoSelect" size="large">\n                Hybrid Select\n              </DropDownLabel>\n              <HybridSelectExample selectId="demoSelect" />\n            </Column>\n            <Column medium={4}>\n              <DropDownLabel htmlFor="demoLabelSelect" size="large">\n                Hybrid Select with label\n              </DropDownLabel>\n              <HybridSelectExample label="Sort By: " selectId="demoLabelSelect" />\n            </Column>\n        </Row>\n    </Container>\n</ThemeProvider>\n```\n\n## Button Group\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: title\n    Type: string\n    Default: N/A\n    Notes: Required\n  - Prop: value\n    Type: object\n    Default: N/A\n    Notes: Specifies default active buttons. The object key is section value and the object value is array of button values\n  - Prop: onChange\n    Type: function\n    Default: N/A\n    Notes:\n```\n\n## Button Group Section\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: title\n    Type: string\n    Default: N/A\n    Notes:\n  - Prop: value\n    Type: string\n    Default: N/A\n    Notes: Required\n  - Prop: isMultiSelect\n    Type: bool\n    Default: \'false\'\n    Notes:\n```\n\n## Button Group Section Button\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: string\n    Default: N/A\n    Notes: Required\n  - Prop: onClick\n    Type: function\n    Default: N/A\n    Notes:\n```\n\n```react\nresponsive: true\nspan: 6\n---\n<Container>\n    <Row>\n        <Column medium={8} large={6} style={{ padding: "16px 0" }}>\n            <ButtonGroup title="Sort by:" value={{ 0: ["0"] }}>\n                <ButtonGroup.Section value="0" isMultiSelect>\n                    <ButtonGroup.Button value="0">All</ButtonGroup.Button>\n                    <ButtonGroup.Button value="1">Date</ButtonGroup.Button>\n                    <ButtonGroup.Button value="2">Name (A-Z)</ButtonGroup.Button>\n                    <ButtonGroup.Button value="3">Name (Z-A)</ButtonGroup.Button>\n                </ButtonGroup.Section>\n            </ButtonGroup>\n            <ButtonGroup title="Filter by:" value={{ 0: ["0"], 1: ["0"] }}>\n                <ButtonGroup.Section title="Category" value="0">\n                    <ButtonGroup.Button value="0">All</ButtonGroup.Button>\n                    <ButtonGroup.Button value="1">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="2">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="3">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="4">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="5">Button Label</ButtonGroup.Button>\n                </ButtonGroup.Section>\n                <ButtonGroup.Section title="Dates" value="1">\n                    <ButtonGroup.Button value="0">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="1">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="2">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="3">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="4">Button Label</ButtonGroup.Button>\n                    <ButtonGroup.Button value="5">Button Label</ButtonGroup.Button>\n                </ButtonGroup.Section>\n                <ButtonGroup.Section title="Distance (miles)" value="2">\n                    <ButtonGroup.Button value="0">All</ButtonGroup.Button>\n                    <ButtonGroup.Button value="1">10</ButtonGroup.Button>\n                    <ButtonGroup.Button value="2">20</ButtonGroup.Button>\n                    <ButtonGroup.Button value="3">30</ButtonGroup.Button>\n                    <ButtonGroup.Button value="4">40</ButtonGroup.Button>\n                </ButtonGroup.Section>\n            </ButtonGroup>\n        </Column>\n    </Row>\n</Container>\n```\n\n## Toggle\n\n```table\nspan: 6\nrows:\n  - Prop: value\n    Type: bool\n    Default:\n    Notes: defines toggle position\n  - Prop: size\n    Type: string\n    Default:\n    Notes: defines toggle size, can be one `regular` and `large`\n  - Prop: disabled\n    Type: bool\n    Default:\n    Notes: defines if toggle is disabled\n  - Prop: onToggle\n    Type: function\n    Default:\n    Notes: on toggle callback function\n  - Prop: onClick\n    Type: function\n    Default:\n    Notes: on click callback function\n  - Prop: onMouseOver\n    Type: function\n    Default:\n    Notes: on mouseOver callback function\n  - Prop: onMouseOut\n    Type: function\n    Default:\n    Notes: on mouseOut callback function\n  - Prop: onBlur\n    Type: function\n    Default:\n    Notes: on blur callback function\n  - Prop: onFocus\n    Type: function\n    Default:\n    Notes: on focus callback function\n  - Prop: onKeyPress\n    Type: function\n    Default:\n    Notes: on keyPress callback function, by default `space` is used to switch the toggle\n```\n\n```react\n---\n<div>\n    <ToggleWrapperExample size="small"/>\n    <ToggleWrapperExample value={false} size="small" disabled/>\n    <ToggleWrapperExample size="large" />\n    <ToggleWrapperExample size="large" disabled/>\n</div>\n```\n\n## Quantity selector\n\n```table\nspan: 6\nrows:\n  - Prop: disabled\n    Type: bool\n    Default:\n    Notes: defines if toggle is disabled\n  - Prop: min\n    Type: number\n    Default: 0\n    Notes: defines min number. The decrement button is disabled when min value is reached.\n  - Prop: max\n    Type: number\n    Default: 99\n    Notes: defines max number. The increment button is disabled when max value is reached.\n  - Prop: checkValue\n    Type: function\n    Default:\n    Notes: call back function before value is updated. Is passed the new value and updates if the function returns true and does not if returns false.\n  - Prop: handleValueUpdate\n    Type: function\n    Default:\n    Notes: call back function after value is updated either by buttons or keyboard. Use this function instead of onChange.\n  - Prop: incrementBtnLabel\n    Type: string\n    Default: Increase Quantity\n    Notes: Aria label of the Increment button for accessibility requirement\n  - Prop: decrementBtnLabel\n    Type: string\n    Default: Decrease Quantity\n    Notes: Aria label of the Decrement button for accessibility requirement\n  - Prop: incrementBtnProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed only to the increment button.\n  - Prop: decrementBtnProps\n    Type: object\n    Default: "{ }"\n    Notes: Extra props passed only to the decrement button.\n```\n\nIt also accepts any event handlers. e.g. `onBlur`, `onFocus` etc. as well as styles object.\n\n```react\nspan: 6\n---\n<div style={{ display: \'flex\' }}>\n    <div style={{ width: \'30%\' }}>\n        <QtySelector value={50} decrementBtnProps={{className:"classOnDecrementBtn"}} incrementBtnProps={{className:"classOnIncrementBtn"}}  />\n    </div>\n    <div style={{ width: \'30%\' }}>\n        <QtySelector value={2} min={2} max={4}/>\n    </div>\n    <div style={{ width: \'30%\' }}>\n        <QtySelector value={50} disabled/>\n    </div>\n</div>\n```\n\n## Search Component\n\n```table\nspan: 6\nrows:\n  - Prop: variant\n    Type: string\n    Default: large\n    Notes: Small 36px and large 44px\n  - Prop: placeholder\n    Type: string\n    Default: ""\n    Notes: Placeholder text\n  - Prop: className\n    Type: string\n    Default: ""\n    Notes: Additional class\n  - Prop: searchBtnAreaLabel\n    Type: string\n    Default: \'Search button\'\n    Notes: For accessibility\n  - Prop: clearBtnAreaLabel\n    Type: string\n    Default: "Clear button"\n    Notes: For accessibility\n  - Prop: cancelBtnAreaLabel\n    Type: string\n    Default: "Cancel button"\n    Notes: For accessibility\n  - Prop: inputAreaLabel\n    Type: string\n    Default: "Search input"\n    Notes: For accessibility\n  - Prop: value\n    Type: string\n    Default: ""\n    Notes: Input value. A required prop\n  - Prop: onChange\n    Type: function\n    Default: null\n    Notes: Required prop. Controlled input.\n  - Prop: onFocus\n    Type: function\n    Default: noop\n    Notes: Callback when input gets focused\n  - Prop: onBlur\n    Type: function\n    Default: noop\n    Notes: Callback when input gets blurred.\n  - Prop: searchIconSelect\n    Type: function\n    Default: noop\n    Notes: Callback when search icon is clicked.\n  - Prop: clearText\n    Type: function\n    Default: noop\n    Notes: Callback when x button is clicked.\n  - Prop: cancelCallback\n    Type: function\n    Default: noop\n    Notes: Callback when cancel button is clicked.\n  - Prop: hasBackground\n    Type: boolean\n    Default: false\n    Notes: changes opacity when focused in order to get better contrast on the background.\n  - Prop: iconOnly\n    Type: boolean\n    Default: false\n    Notes: Input gets invisible when not focused. Only the icon stays as a button.\n  - Prop: isSuggestOpened\n    Type: boolean\n    Default: false\n    Notes: When true removes border radius from the input in order to fit with the search suggest.\n```\n\n```react\nresponsive: true\nspan: 6\n---\n<Column medium={10} large={7} style={{ paddingBottom: "16px" }}>\n  <Header>\n    <Column medium={10} large={7} style={{ paddingBottom: "16px" }}>\n        <SearchInput hasBackground placeholder="Enter term..." onChange={()=>{}} value="asd" />\n    </Column>\n  </Header>\n  <div style={{marginTop: "10px"}} />\n  <SearchInput placeholder="Enter term..." onChange={()=>{}} value="" variant="small" />\n  <div style={{marginTop: "10px"}} />\n  <SearchInput placeholder="Enter term..." iconOnly onChange={()=>{}} value="" variant="small" />\n  <div style={{marginTop: "10px"}} />\n  <SearchInput placeholder="Enter term..." iconOnly onChange={()=>{}} value="" />\n</Column>\n```\n\n## Search Input Mobile\n\nSame props as SearchComponent. Shows on top of the screen when focused and has cancel button.\n\n```react\nresponsive: true\nspan: 6\n---\n<Column medium={10} large={7} style={{ paddingBottom: "16px" }}>\n  <SearchInputMobile placeholder="Enter term..." onChange={()=>{}} value="" />\n</Column>\n```\n'}});
//# sourceMappingURL=9.ffb0cd29.chunk.js.map