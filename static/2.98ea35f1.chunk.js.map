{"version":3,"sources":["webpack:///static/2.98ea35f1.chunk.js","webpack:///./catalog/pages/tabs/index.md?7e88","webpack:///./catalog/pages/tabs/index.md"],"names":["webpackJsonp","1203","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1228"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,IAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/2.98ea35f1.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1203:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(0);\n    var createReactClass = __webpack_require__(65);\n    var PageRenderer = __webpack_require__(15).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1228)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./index.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./index.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1228:\n/***/ (function(module, exports) {\n\nmodule.exports = \"### Tabs\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: items\\n    Type: [node]\\n    Default:\\n    Notes: Required. Array of tab items.\\n  - Prop: itemsProps\\n    Type: [array]\\n    Default:\\n    Notes: Optional. Array of objects that determine attributes applied to every tab item.\\n  - Prop: defaultItemProps\\n    Type: object\\n    Default:\\n    Notes: Optional. Object that determines default attributes applied to every tab item.\\n  - Prop: index\\n    Type: number\\n    Default: -1\\n    Notes: Optional. Index of currently selected item.\\n  - Prop: onClick\\n    Type: func(index)\\n    Default: ()=>{}\\n    Notes: Optional. Function that handles onclick event on item and takes index of item as an argument.\\n  - Prop: tabChangedWithArrowKeys\\n    Type: func(index)\\n    Default: ()=>{}\\n    Notes: Optional. This function is invoked when tab is changed with arrow keys. Takes index of item as an argument.\\n  - Prop: variant\\n    Type: bool\\n    Default: dark\\n    Notes: Optional. Determines the style of the Text. One of “dark”, “light”, and “accent”\\n  - Prop: accent\\n    Type: string\\n    Default:\\n    Notes: Optional. If variant equals “accent”, this props determines the style of the Text. One of “aquamarine”, “azure”, “alert”, “caution”, “cruz”, “heliotrope”, “positive”, “summerSky”, and “turquoise”.\\n  - Prop: weight\\n    Type: string\\n    Default: regular\\n    Notes: Optional. Determines the font-weight of the Text. One of “regular” and “semiBold”.\\n  - Prop: underlineColor\\n    Type: string\\n    Default: #026cdf(themes.tm.primary.base)\\n    Notes: Optional. Determines underline color of selected item.\\n  - Prop: withBorderBottom\\n    Type: bool\\n    Default: true\\n    Notes: Optional. Determines whether there should be a border beneath the Tabs component.\\n```\\n\\n## TabsProvider, TabsConsumer\\n\\nProvide child component with tabIndex and onChangeTabIndex;\\n\\n**tabIndex** - Represents index of currently selected tab.\\n**onChangeTabIndex** - Function, that can be invoked to create event hanler to change the value of tabIndex. Optionaly takes callback function, that will be called with new tabIndex as an argument. Returns a function, that takes one argument: new value of tabIndex to set or event object (requires evet target to have data-index attribute).\\n\\n### Tabs with TabsProvider and TabsConsumer components on a light background\\n\\n```react\\nresponsive: true\\n---\\n<div style={{\\n  padding: '16px'\\n}}>\\n<TabsProvider>\\n    <TabsConsumer>\\n      {({ tabIndex, onChangeTabIndex }) => (\\n        <React.Fragment>\\n        <Tabs\\n          items={['first tab', 'second tab', 'third tab', 'fourth tab', 'fifth tab', 'sixth tab']}\\n          itemsProps={[{'data-custom-info': 'someInfo_0'}, {'data-custom-info': 'someInfo_1'}, {'data-custom-info': 'someInfo_2'}]}\\n          defaultItemProps={{'data-custom-info': 'someDefaultInfo'}}\\n          index={tabIndex}\\n          onClick={onChangeTabIndex()}\\n          tabChangedWithArrowKeys={onChangeTabIndex()}\\n        />\\n        <Column>\\n        <Text weight=\\\"semiBold\\\">Content for tab #{tabIndex + 1}</Text>\\n        <Button onClick={()=>{onChangeTabIndex()(5)}}>Go To Tab #6</Button>\\n        </Column>\\n        </React.Fragment>\\n      )}\\n    </TabsConsumer>\\n</TabsProvider>\\n</div>\\n```\\n\\n### Tabs with TabsProvider and TabsConsumer components on a dark background\\n\\n```react\\nresponsive: true\\n---\\n<div style={{\\n  padding: '16px',\\n  backgroundColor: themes.tm.brand\\n}}>\\n<TabsProvider>\\n    <TabsConsumer>\\n      {({ tabIndex, onChangeTabIndex }) => (\\n        <React.Fragment>\\n        <Tabs\\n          items={['first tab', 'second tab', 'third tab', 'fourth tab', 'fifth tab', 'sixth tab']}\\n          itemsProps={[{'data-custom-info': 'someInfo_0'}, {'data-custom-info': 'someInfo_1'}, {'data-custom-info': 'someInfo_2'}]}\\n          defaultItemProps={{'data-custom-info': 'someDefaultInfo'}}\\n          index={tabIndex}\\n          onClick={onChangeTabIndex()}\\n          tabChangedWithArrowKeys={onChangeTabIndex()}\\n          withBorderBottom={false}\\n          underlineColor={themes.global.white.base}\\n          style={{ color: themes.global.white.base }}\\n        />\\n        <Column>\\n        <Text variant=\\\"light\\\" weight=\\\"semiBold\\\">Content for tab #{tabIndex + 1}</Text>\\n        <Button onClick={()=>{onChangeTabIndex()(5)}}>Go To Tab #6</Button>\\n        </Column>\\n        </React.Fragment>\\n      )}\\n    </TabsConsumer>\\n</TabsProvider>\\n</div>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/2.98ea35f1.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../../node_modules/raw-loader/index.js!./index.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../../node_modules/raw-loader/index.js!./index.md\", function() {\n            component.setState({\n              content: require(\"!!../../../node_modules/raw-loader/index.js!./index.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/pages/tabs/index.md\n// module id = 1203\n// module chunks = 2","module.exports = \"### Tabs\\n\\n```table\\nspan: 6\\nrows:\\n  - Prop: items\\n    Type: [node]\\n    Default:\\n    Notes: Required. Array of tab items.\\n  - Prop: itemsProps\\n    Type: [array]\\n    Default:\\n    Notes: Optional. Array of objects that determine attributes applied to every tab item.\\n  - Prop: defaultItemProps\\n    Type: object\\n    Default:\\n    Notes: Optional. Object that determines default attributes applied to every tab item.\\n  - Prop: index\\n    Type: number\\n    Default: -1\\n    Notes: Optional. Index of currently selected item.\\n  - Prop: onClick\\n    Type: func(index)\\n    Default: ()=>{}\\n    Notes: Optional. Function that handles onclick event on item and takes index of item as an argument.\\n  - Prop: tabChangedWithArrowKeys\\n    Type: func(index)\\n    Default: ()=>{}\\n    Notes: Optional. This function is invoked when tab is changed with arrow keys. Takes index of item as an argument.\\n  - Prop: variant\\n    Type: bool\\n    Default: dark\\n    Notes: Optional. Determines the style of the Text. One of “dark”, “light”, and “accent”\\n  - Prop: accent\\n    Type: string\\n    Default:\\n    Notes: Optional. If variant equals “accent”, this props determines the style of the Text. One of “aquamarine”, “azure”, “alert”, “caution”, “cruz”, “heliotrope”, “positive”, “summerSky”, and “turquoise”.\\n  - Prop: weight\\n    Type: string\\n    Default: regular\\n    Notes: Optional. Determines the font-weight of the Text. One of “regular” and “semiBold”.\\n  - Prop: underlineColor\\n    Type: string\\n    Default: #026cdf(themes.tm.primary.base)\\n    Notes: Optional. Determines underline color of selected item.\\n  - Prop: withBorderBottom\\n    Type: bool\\n    Default: true\\n    Notes: Optional. Determines whether there should be a border beneath the Tabs component.\\n```\\n\\n## TabsProvider, TabsConsumer\\n\\nProvide child component with tabIndex and onChangeTabIndex;\\n\\n**tabIndex** - Represents index of currently selected tab.\\n**onChangeTabIndex** - Function, that can be invoked to create event hanler to change the value of tabIndex. Optionaly takes callback function, that will be called with new tabIndex as an argument. Returns a function, that takes one argument: new value of tabIndex to set or event object (requires evet target to have data-index attribute).\\n\\n### Tabs with TabsProvider and TabsConsumer components on a light background\\n\\n```react\\nresponsive: true\\n---\\n<div style={{\\n  padding: '16px'\\n}}>\\n<TabsProvider>\\n    <TabsConsumer>\\n      {({ tabIndex, onChangeTabIndex }) => (\\n        <React.Fragment>\\n        <Tabs\\n          items={['first tab', 'second tab', 'third tab', 'fourth tab', 'fifth tab', 'sixth tab']}\\n          itemsProps={[{'data-custom-info': 'someInfo_0'}, {'data-custom-info': 'someInfo_1'}, {'data-custom-info': 'someInfo_2'}]}\\n          defaultItemProps={{'data-custom-info': 'someDefaultInfo'}}\\n          index={tabIndex}\\n          onClick={onChangeTabIndex()}\\n          tabChangedWithArrowKeys={onChangeTabIndex()}\\n        />\\n        <Column>\\n        <Text weight=\\\"semiBold\\\">Content for tab #{tabIndex + 1}</Text>\\n        <Button onClick={()=>{onChangeTabIndex()(5)}}>Go To Tab #6</Button>\\n        </Column>\\n        </React.Fragment>\\n      )}\\n    </TabsConsumer>\\n</TabsProvider>\\n</div>\\n```\\n\\n### Tabs with TabsProvider and TabsConsumer components on a dark background\\n\\n```react\\nresponsive: true\\n---\\n<div style={{\\n  padding: '16px',\\n  backgroundColor: themes.tm.brand\\n}}>\\n<TabsProvider>\\n    <TabsConsumer>\\n      {({ tabIndex, onChangeTabIndex }) => (\\n        <React.Fragment>\\n        <Tabs\\n          items={['first tab', 'second tab', 'third tab', 'fourth tab', 'fifth tab', 'sixth tab']}\\n          itemsProps={[{'data-custom-info': 'someInfo_0'}, {'data-custom-info': 'someInfo_1'}, {'data-custom-info': 'someInfo_2'}]}\\n          defaultItemProps={{'data-custom-info': 'someDefaultInfo'}}\\n          index={tabIndex}\\n          onClick={onChangeTabIndex()}\\n          tabChangedWithArrowKeys={onChangeTabIndex()}\\n          withBorderBottom={false}\\n          underlineColor={themes.global.white.base}\\n          style={{ color: themes.global.white.base }}\\n        />\\n        <Column>\\n        <Text variant=\\\"light\\\" weight=\\\"semiBold\\\">Content for tab #{tabIndex + 1}</Text>\\n        <Button onClick={()=>{onChangeTabIndex()(5)}}>Go To Tab #6</Button>\\n        </Column>\\n        </React.Fragment>\\n      )}\\n    </TabsConsumer>\\n</TabsProvider>\\n</div>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/pages/tabs/index.md\n// module id = 1228\n// module chunks = 2"],"sourceRoot":""}