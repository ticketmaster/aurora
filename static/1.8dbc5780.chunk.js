webpackJsonp([1],{1200:function(e,t,n){var o=n(0),i=n(65),r=n(15).PageRenderer;r.__esModule&&(r=r.default);var a=i({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:n(1225)}},componentWillMount:function(){},render:function(){return o.createElement(r,Object.assign({},this.props,{content:this.state.content}))}});a.__catalog_loader__=!0,e.exports=a},1225:function(e,t){e.exports='### Tooltip\n\nTooltip Component\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: children\n    Type: node\n    Default:\n    Notes: Render as the Tooltip\'s children\n  - Prop: isVisible\n    Type: boolean\n    Default: \'false\'\n    Notes: Show/hide tooltip\n  - Prop: variant\n    Type: one of \'dark\', \'light\'\n    Default: \'light\'\n    Notes: Changes tooltip color scheme\n  - Prop: direction\n    Type: one of \'left\', \'right\', \'top\', \'bottom\'\n    Default: \'auto\'\n    Notes: Changes tooltip direction from the item that triggers it. Auto shows the tooltip on top/bottom and makes sure it is always visibel in the view port and in the restriction container that is being passed as second param to getDimensionsFromEvent\n  - Prop: position\n    Type: Object\n    Default: all props are 0\n    Notes: This prop is generated from Tooltip.getDimensionsFromEvent(e, parent) static function. The function should receive the event that triggers the Tooltip (usually hover). Secondary parameter that restricts tooltip to be visible in a certain container. Work only if direction is auto\n  - Prop: preferTop\n    Type: boolean\n    Default: \'false\'\n    Notes: Currently when prop is set to AUTO, the tooltip will display by default to BOTTOM of the parent element if space exists.  Set this prop to true to set display default to TOP of parent element\n  - Prop: directionChanged\n    Type: func\n    Default: \'null\'\n    Notes: Callback function that can be passed to parent component when tooltip direction changes\n```\n\n```react\n---\n<div style={{ display: \'flex\', justifyContent: \'space-between\' }}>\n  <TooltipDemo\n    direction="bottom"\n    text="Hover for Bottom Tooltip"\n  />\n  <TooltipDemo\n    direction="top"\n    text="Hover for Top Tooltip"\n  />\n  <TooltipDemo\n    direction="right"\n    text="Hover for Right Tooltip"\n  />\n  <TooltipDemo\n    direction="left"\n    text="Hover for Left Tooltip"\n  />\n</div>\n```\n\n```react\n---\n<div>\n  <TooltipRestrictedDemo />\n</div>\n```\n\n#### Manual Refresh\n\n- If the content of a tooltip can change while the tooltip is visible, you can call a `refresh()` method on the component to reset the position based on the content.\n\nExample: hover over tooltip for more than 2 sec\n\n```react\nspan: 5\n---\n<div>\n  <TooltipRestrictedAsyncDemo />\n</div>\n```\n\n#### Notes about PROP: preferTop\n\n- Currently when prop: `direction` is not set, the tooltip will display by default under the parent element if space exists. You can set prop: `preferTop = true` to display tooltip above parent element by default.\n\n#### Notes about PROP: directionChanged\n\n- `directionChanged` prop is a callback function can be passed from parent component and will be triggered when tooltip direction changes, a string `direction` is passed to the callback indicating the new direction of the tooltip. (see console when rolling over above examples)\n\n### Seat Tooltip\n\nSeat Tooltip Component\n\n### Props\n\n```table\nspan: 6\nrows:\n  - Prop: children\n    Type: node\n    Default:\n    Notes: Render as the Seat Tooltip\'s children\n  - Prop: isVisible\n    Type: boolean\n    Default: \'false\'\n    Notes: Show/hide tooltip\n  - Prop: variant\n    Type: one of \'dark\', \'light\'\n    Default: \'light\'\n    Notes: Changes tooltip color scheme\n  - Prop: size\n    Type: one of \'small\', \'large\'\n    Default: \'large\'\n  - Prop: direction\n    Type: one of \'left\', \'right\', \'top\', \'bottom\'\n    Default: \'auto\'\n    Notes: Changes tooltip direction from the item that triggers it. Auto shows the tooltip on top/bottom and makes sure it is always visibel in the view port and in the restriction container that is being passed as second param to getDimensionsFromEvent\n  - Prop: section\n    Type: string or number\n    Default: n/a\n    Notes: Required field. Shows the section in seat data\n  - Prop: row\n    Type: string or number\n    Default: n/a\n    Notes: Required field. Shows the row in seat data\n  - Prop: seat\n    Type: string or number\n    Default: n/a\n    Notes: Required field. Shows the seat in seat data\n  - Prop: position\n    Type: Object\n    Default: all props are 0\n    Notes: This prop is generated from SeatTooltip.getDimensionsFromEvent(e, parent) static function. The function should recieve the event that triggers the Tooltip (usually hover). Secondary parameter that restricts seat tooltip to be visible in a certain container. Work only if direction is auto\n```\n\n```react\n---\n<div>\n  <div style={{ display: \'flex\', justifyContent: \'space-between\' }}>\n    <SeatTooltipDemo\n      direction="bottom"\n      text="Hover for Bottom Tooltip"\n    />\n    <SeatTooltipDemo\n      direction="top"\n      text="Hover for Top Tooltip"\n    />\n    <SeatTooltipDemo\n      direction="right"\n      text="Hover for Right Tooltip"\n    />\n    <SeatTooltipDemo\n      direction="left"\n      text="Hover for Left Tooltip"\n    />\n  </div>\n  <div style={{ display: \'flex\', justifyContent: \'space-between\', marginTop: \'20px\' }}>\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="bottom"\n      text="Hover for Bottom Tooltip"\n    />\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="top"\n      text="Hover for Top Tooltip"\n    />\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="right"\n      text="Hover for Right Tooltip"\n    />\n    <SeatTooltipDemo\n      size="small"\n      variant="dark"\n      direction="left"\n      text="Hover for Left Tooltip"\n    />\n  </div>\n</div>\n```\n'}});
//# sourceMappingURL=1.8dbc5780.chunk.js.map