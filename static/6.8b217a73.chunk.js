webpackJsonp([6],{1193:function(n,e,a){var t=a(0),r=a(65),i=a(15).PageRenderer;i.__esModule&&(i=i.default);var o=r({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:a(1218)}},componentWillMount:function(){},render:function(){return t.createElement(i,Object.assign({},this.props,{content:this.state.content}))}});o.__catalog_loader__=!0,n.exports=o},1218:function(n,e){n.exports='### Default\n\n```hint\nThe drawer is implemented using a React Portal. This requires a div with ID "modal-root" outside of the react root.\n```\n\n```react\nresponsive: false\nspan: 6\nstate: { invert: false }\n---\n<DrawerProvider>\n    <DeviceSizeProvider cssOnly>\n        <Header>\n            <NavBar message="Hi there this is an optional message. There can be really really really long content here but we are going to try not to overflow this area" position="absolute" invert={state.invert}>\n                <NavBar.LogoContainer>\n                    Aurora\n                </NavBar.LogoContainer>\n                <DisplayFor large xLarge>\n                    <NavBar.LinkRow>\n                        <NavBar.Link href="/">Link 1</NavBar.Link>\n                        <NavBar.Link>Link 2</NavBar.Link>\n                        <NavBar.Link>Link 3</NavBar.Link>\n                        <NavBar.Link disableHoverEvents={true}>\n                            More\n                            <NavBar.LinkList style={{ width: "275px", top: \'40px\', left: 0}} renderAfter={<span>After Content</span>}>\n                                <NavBar.LinkListItem href="/">Link 4</NavBar.LinkListItem>\n                                <NavBar.LinkListItem>Link 5</NavBar.LinkListItem>\n                                <NavBar.LinkListItem>Link 6</NavBar.LinkListItem>\n                                <NavBar.LinkListItem>Link 7 With Really Long Content </NavBar.LinkListItem>\n                            </NavBar.LinkList>\n                        </NavBar.Link>\n                    </NavBar.LinkRow>\n                </DisplayFor>\n                <NavBar.Right>\n                    <NavBar.SearchButton />\n                    <NavBar.UserButton />\n                    <DisplayFor small medium>\n                        <NavBar.DrawerMenu header="Content!" style={{ zIndex: "9999"}}>\n                            <Spacing top={{xSmall: "moderate"}}>Some Menu Content</Spacing>\n                        </NavBar.DrawerMenu>\n                    </DisplayFor>\n                </NavBar.Right>\n            </NavBar>\n        </Header>\n        <Spacing top={{small: "cozy"}}>\n            <Container>\n                <Row>\n                    <Column>\n                        <Button variant="outline" onClick={() => setState({ invert: !state.invert })}>invert</Button>\n                    </Column>\n                </Row>\n            </Container>\n        </Spacing>\n    </DeviceSizeProvider>\n</DrawerProvider>\n```\n'}});
//# sourceMappingURL=6.8b217a73.chunk.js.map